<%
  notification_email_disabled = !@system_settings.try(:notification_email_enabled)
%>

<% if flash[:verify] %>
<div class='flash'>
  <p class='notice'><%= flash[:verify] %></p>
</div>
<% end %>
<%= form_for editable_user, :html => {:class => 'default-form', :autocomplete => "off"} do |f| %>
    <div class="clearfix"></div>
    <%= f.error_messages :header_tag => :h3 %>
    <% trying_to_edit_ourself = editing_ourself?(editable_user) %>

    <div class="clearfix"></div>
    <div class="mandate_panel"><span>*</span> <%= t("mandatory_field") %> </div>
    <div class="clearfix"></div>
    <fieldset class="no-border">

    <%= resource_edit_field @user, 'full_name', 'user.full_name', 'text_field', true %>
    <%= resource_edit_field @user, 'user_name', 'login.username', 'text_field', true, !editable_user.new_record? %>
    <%= resource_edit_field @user, 'code', 'user.code', 'text_field' %>
    <%#
      TODO: Lost a little tip panel for the user name: <span class="footnote"><%= t("user.no_blank") ></span> .
      Surely there is a prettier way to add that info back in using Foundation.
    %>
    <%= resource_edit_field @user, 'password', 'login.password.label', 'password_field', new_user, false, t("user.password_strength") %>
    <%= resource_edit_field @user, 'password_confirmation', 'login.password.re_enter', 'password_field', new_user %>

    <div class="row">
      <div class="medium-3 columns">
        <span class="tool-tip-label">
          <label class="key" for="user_locale" ><%= t("home.language") %></label>
        </span>
      </div>
      <div class="medium-8 columns">
        <% value = @user.try(:locale) %>
        <%= f.select :locale, Primero::Application::locales_with_description, {class: 'chosen-select', data: {value: value}} %>
      </div>
      <div class="medium-1 columns"> </div>
    </div>

    <% if !trying_to_edit_ourself && can?(:edit, @user) %>
    <div class="row">
      <div class="medium-3 columns">
        <span class="tool-tip-label">
          <%= f.label :is_manager, t("user.manager"), :class=>'key inline' %>
        </span>
      </div>
      <div class="medium-8 columns">
        <%= f.check_box :is_manager, {}, "true", "false" %>
      </div>
      <div class="medium-1 columns"></div>
    </div>
    <% end %>

    <% if !trying_to_edit_ourself %>
      <div class="row">
        <div class="medium-3 columns">
          <span class="tool-tip-label">
            <label class="key"><%= t("roles.label") %></label>
          </span>
        </div>
        <div class="medium-8 columns">
          <span class="value value_form">
            <span class="section">
              <% @roles.each do |role| %>
                  <label>
                    <%= f.check_box :role_ids, {:id => "user_#{role.name}", :name => "user[role_ids][]", class: 'tick_box'}, role.id, nil %>
                    <%= role.name %>
                  </label>
              <% end %>
              <%= f.hidden_field :role_ids, name: 'user[role_ids][]', value: nil %>
            </span>
          </span>
        </div>
        <div class="medium-1 columns">
          <span class="required">*</span>
        </div>
      </div>

      <div class="row">
        <div class="medium-3 columns">
          <span class="tool-tip-label">
            <label class="key"><%= t("primero_modules.label") %></label>
          </span>
        </div>
        <div class="medium-8 columns">
          <span class="value value_form">
            <span class="section">
              <% @modules.each do |primero_module| %>
                <label>
                    <%= f.check_box :module_ids, {id: "user_#{primero_module.name}", name: "user[module_ids][]", class: 'tick_box'}, primero_module.id, nil %>
                    <%= primero_module.name %>
                </label>
              <% end %>
              <%= f.hidden_field :module_ids, name: 'user[module_ids][]', value: nil %>
            </span>
          </span>
        </div>
        <div class="medium-1 columns">
          <span class="required">*</span>
        </div>
      </div>

      <div class="row">
        <div class="medium-3 columns">
          <span class="tool-tip-label">
            <label class="key"><%= t("user_groups.label") %></label>
          </span>
        </div>
        <div class="medium-8 columns">
          <span class="value value_form">
            <span class="section">
              <% @user_groups.each do |user_group| %>
                <label>
                    <%= f.check_box :user_group_ids, {id: "user_#{user_group.name}", name: "user[user_group_ids][]", class: 'tick_box'}, user_group.id, nil %>
                    <%= user_group.name %>
                </label>
              <% end %>
              <%= f.hidden_field :user_group_ids, name: 'user[user_group_ids][]', value: nil %>
            </span>
          </span>
        </div>
        <div class="medium-1 columns"> </div>
      </div>
    <% end %>

    <%= resource_edit_field @user, 'phone', 'phone', 'text_field' %>
    <%= resource_edit_field @user, 'email', 'email', 'text_field' %>
    <% if !trying_to_edit_ourself %>
      <div class="row">
        <div class="medium-3 columns">
          <span class="tool-tip-label">
            <label class="key" for="user_organization" ><%= t("user.agency") %></label>
          </span>
        </div>
        <div class="medium-8 columns">
          <%= f.select :organization, @agency_names.map {|option| [option['display_text'], option['id']]},
                       { include_blank: t('agencies.select_prompt') }, {class: 'chosen-select'} %>
        </div>
        <div class="medium-1 columns">
          <span class="required">*</span>
        </div>
      </div>
      <% if @current_user.has_module?(PrimeroModule::GBV) %>
        <div class="row">
          <div class="medium-3 columns">
            <span class="tool-tip-label">
              <label class="key" for="user_organization" ><%= t("user.agency_office") %></label>
            </span>
          </div>
          <div class="medium-8 columns">
            <%= f.select :agency_office,
                         @agency_offices.map {|option| [option['display_text'], option['id']]},
                         { include_blank: t("fields.select_box_empty_item") },
                         { class: 'chosen-select' } %>
          </div>
        </div>
      <% end %>
    <% end %>
    <%= resource_edit_field @user, 'position', 'position', 'text_field' %>

    <div class="row">
      <div class="medium-3 columns">
        <span class="tool-tip-label">
          <label class="key" for="user_location" ><%= t("user.location") %></label>
        </span>
      </div>
      <div class="medium-8 columns">
        <% value = @user.try(:location) %>
        <%= f.select :location,
                     options_for_select([], value), {},
                     {class: 'chosen-select',
                     data: {:placeholder => t("fields.select_box_empty_item"), :field_tags => [], :populate => 'Location', value: value}}
        %>
      </div>
      <div class="medium-1 columns"></div>
    </div>

    <% if !trying_to_edit_ourself && can?(:disable, @user) %>
        <div class="row">
          <div class="medium-3 columns">
            <span class="tool-tip-label">
              <%= f.label :disabled, t("user.disabled"), :class=>'key inline' %>
            </span>
          </div>
          <div class="medium-8 columns">
            <%= f.check_box :disabled, {}, "true", "false" %>
          </div>
          <div class="medium-1 columns"></div>
        </div>
    <% end %>

    <div class="row">
      <div class="medium-3 columns">
        <span class="tool-tip-label">
          <%= f.label :send_mail, t("user.send_mail"), :class=>'key inline' %>
        </span>
      </div>
      <div class="medium-8 columns">
        <%= f.check_box :send_mail, {disabled: notification_email_disabled}, "true", "false" %>
      </div>
      <div class="medium-1 columns"></div>
    </div>

    <%= f.hidden_field :verified, :value => true %>

    </fieldset>

    <% content_for :record_sub_nav do %>
    <!--TODO: After we got the user object in the session replace the DB query with User object-->
      <% cancel_path = can?(:index, User) ? 'users' : 'root' %>
      <%= render_controls(@user, 'users', cancel_path) %>
    <% end %>
<% end %>
