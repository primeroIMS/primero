<%
   field_keys ||= []
   name = field_tag_name formObject, date_field, field_keys
   field_id = "#{date_field.form.name.dehumanize}_#{sanitize_to_id name}"
   should_default =
    (defined?(is_subform) && is_subform) ||
    (defined?(is_modal_subform) && is_modal_subform) ||
    formObject.new_record?
   value = selected_date_value(date_field.selected_value) if date_field.selected_value.present? && should_default
   value ||= field_value formObject, date_field, field_keys
   date_validator = date_field.date_validation == 'not_future_date' ? "primeroDateNotInFuture" : "primeroDate"
   error_msg = date_field.date_validation == 'not_future_date' ? "fields.future_date_not_valid" : "fields.date_not_valid"
   is_disabled = date_field.disabled
   disabled = (defined?(is_subform) && is_subform) ? true : is_disabled
   is_mobile = (defined?(is_mobile) && is_mobile) || (defined?(is_mobile?) && is_mobile?)
%>

<div class="row">
  <div class="medium-4 columns">
    <span class="tool-tip-label">
      <%= label_tag field_id, date_field.display_name, :class=>'key inline' %>
    </span>
  </div>
  <div class="medium-8 columns">
    <% if date_field.required %><span class="required form-section-required">*</span><% end %>
    <%= text_field_tag name, value, :class => 'form_date_field has_help', :id => field_id,
    :disabled => disabled, :is_disabled => is_disabled, readonly: is_mobile,
    "data-validator" => date_validator, "data-timepicker" => date_field.date_include_time, required: date_field.required, :"data-abide-ignore" => (defined?(is_subform) && is_subform) ? "" : nil %>
    <small class="form-error"><%= I18n.t(error_msg)%></small>
    <p class="help"><%= date_field.date_include_time ? t("fields.date_help_with_time") : t("fields.date_help") %></p>
    <% if date_field.guiding_questions.present? %>
      <%= render 'form_section/guiding_questions', guiding_questions_text: date_field.guiding_questions %>
    <% end %>
  </div>
</div>
