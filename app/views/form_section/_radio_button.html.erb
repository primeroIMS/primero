<%
  field_keys ||= []
  name = field_tag_name formObject, radio_button, field_keys
  field_id = "#{radio_button.form.name.dehumanize}_#{sanitize_to_id name}"
  should_default =
    (defined?(is_subform) && is_subform) ||
    (defined?(is_modal_subform) && is_modal_subform) ||
    formObject.new_record?
  value = radio_button.selected_value if radio_button.selected_value.present? && should_default
  value ||= field_value formObject, radio_button, field_keys
  options_list = radio_button.options_list(nil, nil, nil, true)
  field_tags = radio_button.field_tags.present? ? radio_button.field_tags : []
  show_horizontal = (options_list.length <= 3) && (options_list.select{|o| o['display_text'].length > 8}.blank?)
  is_disabled = radio_button.disabled
  disabled = (defined?(is_subform) && is_subform) ? true : is_disabled
%>
<div class="row">
  <div class="medium-4 columns">
    <%= label_tag field_id, radio_button.display_name, {:class=>"key inline"}%>
  </div>

  <div class="medium-8 columns">
    <% options_list.each do |option| %>
      <% if radio_button.required %><span class="required form-section-required">*</span><% end %>
      <%radio_button_id = "#{radio_button.form.name.dehumanize}_#{sanitize_to_id(name)}_#{option['id']}"%>
      <% #TODO handle unknown %>
      <%= radio_button_tag name, option['id'], value.to_s == option['id'],  :id => field_id, :disabled => disabled, :is_disabled => is_disabled, :data => { :field_tags => field_tags }, required: radio_button.required, :"data-abide-ignore" => !radio_button.required || (defined?(is_subform) && is_subform) ? "" : nil  %>
      <%= label_tag radio_button_id, option['display_text'] %>
      <% unless show_horizontal %>
        <br>
      <% end %>
    <% end %>
    <% if radio_button.guiding_questions.present? %>
      <%= render 'form_section/guiding_questions', guiding_questions_text: radio_button.guiding_questions %>
    <% end %>
    <p class="help"><%= radio_button.help_text if radio_button.help_text.present? %></p>
  </div>
</div>
